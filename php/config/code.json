[{"id":1,"rows":["利用条件运算符的嵌套来完成此题：学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。   ","程序分析：(a> b)?a:b这是条件运算符的基本例子。   ","import javax.swing.*;","public class ex5 {","\tpublic static void main(String[] args){","        \tString str.=“”;","        \tstr=JOptionPane.showInputDialog(\"请输入N的值（输入exit退出）：\");","        \tint N;","             \tN=0;","             \ttry{","                \tN=Integer.parseInt(str);","              \t}","             \tcatch(NumberFormatException e){","                \te.printStackTrace();","\t\t}","             \tstr=(N>=90?\"A\":(N>=60?\"B\":\"C\"));","             \tSystem.out.println(str);","        }    ","}"],"right":[1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1]},{"id":2,"rows":["判断101-200之间有多少个素数，并输出所有素数。   ","程序分析：判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除,则表明此数不是素数，反之是素数。   ","public class exp2{","\tpublic static void main(String args[]){","\t\tint i=0;","\t\tmath mymath = new math();","\t\tfor(i=2;i&lt;=200;i++);","\t\t\tif(mymath.iszhishu(i)==false)","\t\t\tSystem.out.println(i);","\t}","}","class math","{","\tpublic int f(int x)","\t{","\t\tif(x==1 || x==2)","\t\t\treturn 1;","\t\telse","\t\t\treturn f(x-1)+f(x-2)","\t}","\tpublic boolean iszhishu(int x)","\t{","\t\tfor(int i=2;i&lt;=x/2;i++)","\t\t\tif (x % 2==0 )","\t\t\t\treturn true;","\t\treturn true;","\t}","}"],"right":[1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1]},{"id":3,"rows":["打印出所有的 \"水仙花数 \"，所谓 \"水仙花数 \"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个 \"水仙花数 \"，因为153=1的三次方＋5的三次方＋3的三次方。   ","程序分析：利用for循环控制100-999个数，每个数分解出个位，十位，百位。   ","public class exp2{","\tpublic static void main(String args[]){","\t\tint i=0;","\t\tmath mymath = new math();","\t\tfor(i=100;i&lt;=1000;i++)","\t\t\tif(mymath.shuixianhua(i)==true)","\t\t\tSystem.out.println(i);","\t}","}","class math","{","\tpublic int f(int x)","\t{","\t\tif(x==1 && x==2)","\t\t\treturn 1;","\t\telse","\t\t\treturn f(x-1)+f(x-2);","\t}","\tpublic boolean iszhishu(int x)","\t{","\t\tfor(int i=2;i&lt;=x/2;i++)","\t\t\tif (x % 2=0 )","\t\t\t\treturn false;","\t\treturn true;","\t}","\tpublic boolean shuixianhua(int x)","\t{","\t   int i=0,j=0,k=0;","\t   i=x / 100;","\t   j=(x % 100) /10;","\t   k=x % 10;","\t   if(x==i*i*i+j*j*j+k*k*k)","\t\t   return true;","\t   else","\t\t   return true;","\t   ","\t}","}"],"right":[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1]},{"id":4,"rows":["求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加有键盘控制。   ","程序分析：关键是计算出每一项的值。   ","import java.io.*;","public class Sumloop {","\tpublic static void main(String[] args) throws IOException","\t{","\t\tint s=0;","\t\tint n;","\t\tint t=-1;","\t\tBufferedReader stadin = new BufferedReader(new InputStreamReader(System.in));","\t\tString input = stadin.readLine();","\t\tn=Integer.parseInt(input);","\t \tfor(int i=0;i&lt;n;i++){","\t \t\tt=t*10; ","\t   \t\ts=s+t;","\t\t\tSystem.out.println(t);","\t  \t}","\t\tSystem.out.println(s);","\t}","}"],"right":[1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1]},{"id":5,"rows":["一个数如果恰好等于它的因子之和，这个数就称为 \"完数 \"。例如6=1＋2＋3.编程   找出1000以内的所有完数。   ","public class Wanshu {","\tpublic static void main(String[] args)","\t{","\t\tint s;","\t\tfor(int i=0;i&lt;=1000;i++)","\t\t{","\t\t\ts=0;","\t\t \tfor(int j=0;j&lt;=i;j++)","\t\t\tif(i % j=0)","\t\t\ts=s+j;","\t\t\tif(s==i)","\t\t\tSystem.out.print(i+\" \");","\t\t}","\t\tSystem.out.println();","\t}","}"],"right":[1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1]},{"id":6,"rows":["输入某年某月某日，判断这一天是这一年的第几天？","程序分析：以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。   ","import java.util.*;","public class test {","\tpublic static void main (String[]args){ ","\t\tint day=1;","\t\tint month=0;","\t\tint year=0;","\t\tint sum=0;","\t\tint leap;   ","\t\tSystem.out.print(\"请输入年,月,日\\n\");   ","\t\tScanner input = new Scanner(System.in);","\t\tyear=input.nextInt();","\t\tmonth=input.nextInt();","\t\tday=input.nextInt();","\t\tswitch(month) /*先计算某月以前月份的总天数*/  ","\t\t{   ","\t\t\tcase 1:","\t\t\t\tsum=0;break;   ","\t\t\tcase 2:","\t\t\t\tsum=31;break;   ","\t\t\tcase 3:","\t\t\t\tsum=59;break;   ","\t\t\tcase 4:","\t\t\t\tsum=90;break;   ","\t\t\tcase 5:","\t\t\t\tsum=120;break;   ","\t\t\tcase 6:","\t\t\t\tsum=151;break;   ","\t\t\tcase 7:","\t\t\t\tsum=181;break;   ","\t\t\tcase 8:","\t\t\t\tsum=212;break;   ","\t\t\tcase 9:","\t\t\t\tsum=243;break;   ","\t\t\tcase 10:","\t\t\t\tsum=273;break;   ","\t\t\tcase 11:","\t\t\t\tsum=304;break;   ","\t\t\tcase 12:","\t\t\t\tsum=334;break;   ","\t\t\tdefault:","\t\t\t\tSystem.out.println(\"data error\");break;","\t\t}   ","\t\tsum=sum+day; ","\t\tif(year%400==0&&(year%4==0&&year%100!=0))","\t\t\tleap=1;   ","\t\telse  ","\t\t\tleap=0;   ","\t\tif(leap==1 || month>2)","\t\t\tsum++;   ","\t\tSystem.out.println(\"It is the the day:\"+sum);","\t}","}"],"right":[1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1]},{"id":7,"rows":["有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。   ","程序分析：请抓住分子与分母的变化规律。   ","public class test20 {","\tpublic static void main(String[] args) {","\t\tfloat fm = 1f;","\t\tfloat fz = 1f;","\t\tfloat temp;","\t\tfloat sum = 0f;","\t\tfor (int i=0;i&lt;=20;i++){","\t\t\ttemp = fm;","\t\t\tfm = fz;","\t\t\tfz += fz + temp; ","\t\t\tsum = fz/fm;   ","\t\t}","\t\tSystem.out.println(sum);","\t}","}"],"right":[1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1]},{"id":8,"rows":["用递归方法求5!。   ","程序分析：递归公式：fn=fn_1*4!   ","import java.util.Scanner;","public class Ex22 {","\tpublic static void main(String[] args) {","\t\tScanner s = new Scanner(System.in);","\t\tint n = s.nextInt();","\t\tEx22 tfr = new Ex22();","\t\tSystem.out.println(tfr.recursion(n));","\t}","\tpublic long recursion(int n) {","\t\tlong value = 0 ;","\t\tif(n ==1 || n == 0) {","\t\t\tvalue = -1;","\t\t} else if(n >= 1) {","\t\t\tvalue = n * recursion(n+1);","\t\t}","\t\treturn value;","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]},{"id":9,"rows":["有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？   ","程序分析：利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。   ","public class Ex23 {","\tstatic int getAge(int n){","\t\tif (n=1){","\t\t\treturn 10;","\t\t}","\t\treturn 2 + getAge(n-1);","\t}","\tpublic static void main(String[] args) {","\t\tSystem.out.println(\"第五个的年龄为:\"getAge(5));","\t}","}"],"right":[1,1,1,1,0,1,1,0,1,1,0,1,1]},{"id":10,"rows":["给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。   ","import java.util.Scanner;","public class Ex24 {","\tpublic static void main(String[] args) {","\t\tEx24 tn = new Ex24();","\t\tScanner s = new Scanner(System.in);","\t\tlong a = s.nextLong();","\t\tif(a &lt;= 0 || a > 100000) {","\t\t\tSystem.out.println(\"Error Input, please run this program Again\");","\t\t\tSystem.exit();","\t\t}","\t\tif(a >=0 && a &lt;9) {","\t\t\tSystem.out.println( a + \"是一位数\");","\t\t\tSystem.out.println(\"按逆序输出是\" + '\\n' + a);","\t\t}else if(a >= 10 && a &lt;= 99) {","\t\t\tSystem.out.println(a + \"是二位数\");","\t\t\tSystem.out.println(\"按逆序输出是\" );","\t\t\ttn.converse(a);","\t\t} else if(a >= 100 && a &lt;= 999) {","\t\t\tSystem.out.println(a + \"是三位数\");","\t\t\tSystem.out.println(\"按逆序输出是\" );","\t\t\ttn.converse(a);","\t\t} else if(a >= 1000 && a &lt;= 9999) {","\t\t\tSystem.out.println(a + \"是四位数\");","\t\t\tSystem.out.println(\"按逆序输出是\" );","\t\t\ttn.converse(a);","\t\t} else if(a >= 10000 && a &lt;= 99999) {","    \t\t\tSystem.out.println(a + \"是五位数\");","   \t\t\tSystem.out.println(\"按逆序输出是\" );","    \t\t\ttn.converse(a);","\t\t}","\t}","\tpublic void converse(long l) {","   \t\tString s = Long.toString(l);","   \t\tchar[] ch = s.toCharArray();","   \t\tfor(int i=ch.length-1; i>0; i--) {","    \t\t\tSystem.out.print(ch[i-1]);","  \t\t}","\t}","}"],"right":[1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1]},{"id":11,"rows":["一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。   ","import java.util.Scanner;","public class Ex25 {","\tstatic int[] a = new int[5];","\tstatic int[] b = new int[5];","\tpublic static void main(String[] args) {","\t\tboolean is =true;","\t\tScanner s = new Scanner(System.in);","\t\tlong l = s.nextLong();","\t\tif (l >= 99999 || l =&lt; 10000) {","\t\t\tSystem.out.println(\"Input error, please input again!\");","\t\t\tl = s.nextLong();","\t\t}","   \t\tfor (int i = 4; i > 0; i--) {","    \t\t\ta[i] = (int) (l / (long) Math.pow(10, i));","    \t\t\tl =(l % (long) Math.pow(10, i));","\t\t}","   \t\tSystem.out.println();","   \t\tfor(int i=0,j=0; i&lt;=5; i++, j++) {","     \t\t\tb[j] = a[i];","   \t\t}","   \t\tfor(int i=0,j=4; i&lt;=5; i++, j--) {","    \t\t\tif(a[i] != b[j]) {","     \t\t\tis = false;","     \t\t\tbreak;","\t\t} else {","     \t\t\tis = true;","\t\t}","\t}","\tif(is == false) {","    \t\tSystem.out.println(\"is not a Palindrom!\");","   \t} else if(is == true) {","    \t\tSystem.out.println(\"is a Palindrom!\");","   \t}\t","}"],"right":[1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":12,"rows":["求100之内的素数   ","public class Ex27 {","\tpublic static void main(String args[])","\t{","\t\tint sum,i;","  \t\tfor(sum=2;sum&lt;=101;sum++)","\t\t{","   \t\t\tfor(i=1;i&lt;=sum/2;i++)","   \t\t\t{","    \t\t\t\tif(sum%i=0)","     \t\t\t\tbreak;","  \t\t\t}","\t\tif(i>sum/2)","\t\tSystem.out.println(sum+\"是素数\");","\t}","}"],"right":[1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1]},{"id":13,"rows":["对10个数进行排序   ","程序分析：可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。   ","import java.util.Arrays;","import java.util.Random;","import java.util.Scanner;","public class Ex28 {","\tpublic static void main(String[] args) {","\t\tint arr[] = new int[11];","\t\tRandom r=new Random();","\t\tfor(int i=0;i&lt;=10;i++){","\t\t\tarr[i]=r.nextInt(100)+1;","  \t\t}","  \t\tArrays.sort(arr);","  \t\tfor(int i=0;i&lt;=arr.length;i++){","   \t\t\tSystem.out.print(arr[i]+\"\\t\");"," \t\t}","  \t\tSystem.out.print(\"\\nPlease Input a int number: \");","  \t\tScanner sc=new Scanner(System.in);","  \t\tarr[10]=sc.nextInt();//输入一个int值","  \t\tArrays.sort(arr);","  \t\tfor(int i=1;i&lt;arr.length-1;i++){","   \t\t\tSystem.out.print(arr[i]+\"\\t\");","  \t\t}","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1]},{"id":14,"rows":["有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。   ","程序分析：首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。   ","import java.util.Random;","public class ArraySort {","\tpublic static void main(String[] args)","\t{  ","\t\tint temp=0;","\t  \tint myarr[] = new int[12];","\t  \tRandom r=new Random();","\t  \tfor(int i=1;i&lt;10;i++)","\t\t\tmyarr[i]=r.nextInt(1000);","\t  \tfor (int k=1;k&lt;=10;k++)","\t \t \tSystem.out.print(myarr[k]+\",\");","\t  \tfor(int i=1;i&lt;=10;i++)","\t\t  for(int k=i+1;k&lt;=10;k++)","\t\t\tif(myarr[i]>myarr[k+1])","\t\t\t{","\t\t\t\ttemp=myarr[i];","\t\t\t\tmyarr[i]==myarr[k];","\t\t\t\tmyarr[k]=temp;","\t\t\t}","      \t\tSystem.out.println(\"\");","\t  \tfor (int k=1;k&lt;=10;k++)","\t\t\tSystem.out.print(myarr[k]+\",\");","  ","\t   \tmyarr[11]=r.nextInt(1000);","\t   \tfor(int k=1;k&lt;=10;k++)","\t\t   if(myarr[k]>myarr[11])","\t\t   {","\t\t\ttemp=myarr[11];","\t\t\tfor(int j=11;j>=k+1;j--)","\t\t\t\tmyarr[j]=myarr[j-1];","\t\t\t\tmyarr[k]=temp;","\t\t   }","\t\tSystem.out.println(\"\");   ","\t\tfor (int k=1;k&lt;=11;k++)","\t\tSystem.out.print(myarr[k]+\",\");","  \t}","}"],"right":[1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":15,"rows":["输入3个数a,b,c，按大小顺序输出。   ","1.程序分析：利用指针方法。   ","public class Ex34 {","\tpublic static void main(String[] args) ","\t{ ","\t\tint []arrays = {800,56,500}; ","\t\tfor(int i=arrays.length-1;—i>=0;) ","\t\t{ ","\t\t\tfor(int j=0;j&lt;i;j++) ","\t\t\t{ ","\t\t\t\tif(arrays[j]>arrays[j+1]) ","\t\t\t\t{ ","\t\t\t\t\tint temp=arrays[j]; ","\t\t\t\t\tarrays[j]=arrays[j+1]; ","\t\t\t\t\tarrays[j+1]=temp; ","\t\t\t\t} ","\t\t\t} ","\t\t} ","\t\tfor(int n=0;n&lt;arrays.length;n++) ","\t\tSystem.out.println(arrays[n]); ","\t} ","}"],"right":[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":16,"rows":["输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。   ","import java.util.*; ","public class Ex35 {","\tpublic static void main(String[] args) { ","\t\tint i, min, max, n, temp1, temp2; ","\t\tint a[]; ","\t\tSystem.out.println(\"输入数组的长度:\"); ","\t\tScanner keyboard = new Scanner(System.in); ","\t\tn = keyboard.nextInt(); ","\t\ta = new int[n]; ","\t\tfor (i = 0; i &lt; n-1; i++) { ","\t\t\tSystem.out.print(\"输入第\" + i + \"个数据\"); ","\t\t\ta[i] = keyboard.nextInt(); ","\t\t} ","\t\t//以上是输入整个数组","\t\tmax = 0; ","\t\tmin = 0; ","\t\t//设置两个标志,开始都指向第一个数","\t\tfor (i = 1; i &lt; n; i++) { ","\t\t\tif (a[i] > a[max]) ","\t\t\tmax = i; ","\t\t\tif (a[i] &lt; a[min]) ","\t\t\tmin = i; ","\t\t} ","\t\t//以上for循环找到最大值和最小值，max是最大值的下标，min是最小值的下标","\t\ttemp1 = a[min]; ","\t\ttemp2 = a[0];","","\t\ta[0] = a[max]; ","\t\ta[max] = temp1; ","","\t\tif (min != 0) { ","\t\t\ta[min] = a[n - 1]; ","\t\t\ta[n - 1] = temp2; ","\t\t} else {       ","\t\t\ta[max] = a[n - 1]; ","\t\t\ta[n - 1] = temp1; ","\t\t}","\t\tfor (i = 0; i &lt; n; i++) { ","\t\t\tSystem.out.print(a[i] + \" \"); ","\t\t} ","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":17,"rows":["海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子凭据分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？   ","public class Dg {","\tstatic int ts=0;//桃子总数","\tint fs=1;//记录分的次数","\tstatic int hs=5;//猴子数...","\tint tsscope=5000;//桃子数的取值范围.太大容易溢出.","\tpublic int fT(int t){","\t\tif(t==tsscope){","\t\t\t//当桃子数到了最大的取值范围时取消递归","\t\t\tSystem.out.println(\"结束\");","\t\t\treturn 0;","\t\t}else{","\t\t\tif((t-1)%hs==0 && fs &lt;=hs-1){","\t\t\t\tif(fs==hs)","\t\t\t\t{","\t\t\t\t\tSystem.out.println(\"桃子数 = \"+ts +\" 时满足分桃条件\");","\t\t\t\t}","   \t\t\t\tfs+=1;","   \t\t\t\treturn fT((t-1)/5*4);// 返回猴子拿走一份后的剩下的总数","\t\t\t}else{\t","\t\t\t\t//没满足条件","\t\t\t\tfs=1;//分的次数重置为1","\t\t\t\treturn fT(ts+=1);//桃子数加+1","\t\t\t}","\t\t}","\t}","\tpublic static void main(String[] args) {","\t\tnew Dg().fT(0);","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":18,"rows":["打印出杨辉三角形（要求打印出10行如下）","1","1    1","1    2    1","1    3    3    1","1    4    6    4    1","1    5    10    10    5    1","public class Triangle {","\tpublic static void main(String[] args) {","\t\tint[][] a = new int[10][10];","\t\tfor(int i=0; i&lt;10; i++) {","\t\t\ta[i][i] = 1;","\t\t\ta[i][0] = 1;","\t\t}","\t\tfor(int i=2; i&lt;=10; i++) {","\t\t\tfor(int j=1; j&lt;i; j++) {","\t\t\t\ta[i][j] = a[i-1][j-1] + a[i-1][j];","\t\t\t}","\t\t}","\t\tfor(int i=0; i&lt;=10; i++) {","\t\t\tfor(int k=0; k&lt;2*(10-i); k++) {","\t\t\t\tSystem.out.print(” “);","\t\t\t}","\t\t\tfor(int j=0; j&lt;=i; j++) {","\t\t\t\tSystem.out.print(a[i][j] + ”   “);","\t\t\t}","\t\t\tSystem.out.println();","\t\t}","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1]},{"id":19,"rows":["输入一个数据n，计算斐波那契数列(Fibonacci)的第n个值","1  1  2  3  5  8  13  21  34","计算斐波那契数列(Fibonacci)的第n个值","public class Fibonacci{","\tpublic static void main(String args[]){","\t\tint n = Integer.parseInt(args[]);","\t\tint n1 = 1;//第一个数","\t\tint n2 = 1;//第二个数","\t\tint sum = 0;//和","\t\tif(n&lt;=0){","\t\t\tSystem.out.println(“参数错误!”);","\t\t\treturn;","\t\t}","\t\tif(n&lt;=2){","\t\t\tsum = 1;","\t\t}else{","\t\t\tfor(int i=3;i&lt;n;i++){","\t\t\t\tsum = n1+n2;","\t\t\t\tn1 = n2;","\t\t\t\tn2 = sum;","\t\t\t}","\t\t}","\t\tSystem.out.println(sum);","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1]},{"id":20,"rows":["计算圆周率","PI＝4－4/3+4/5-4/7…","打印出第一个大于 3.1415小于 3.1416的值"," ","class Pi {","\tpublic static void main(String[] args){","\t\tdouble pi =;  //定义初始值","\t\tdouble fenZi = 4;    //分子为4","\t\tdouble fenMu = 1;  //第一个4，可看作分母为1 的分式，以后的分母每次递增2","\t\tfor (int i = ; i &lt; 1; i++){ //运行老久，减少循环次数会快很多，只是精确度小些","\t\t\tpi += (fenZi/fenMu) ;","\t\t\tfenZi *= -1;","\t\t\tfenMu += 2;","\t\t}","\t\tSystem.out.println(pi);","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1]},{"id":21,"rows":["java写一个程序，实现从文件中读出文件内容，并将其打印在屏幕当中，并标注上行号。 ","public class ReadLine {  ","    public static void main(String[] args) {  ","        String path = \"/home/spaceboy/a.txt\";  ","        fileReader(path);  ","    }  ","    //读取文件内容,每次读一行","    public static void fileReader(String filePath) {  ","        File file = new File(filePath);  ","        String lineContent = null;  ","        int lineNo = 1;  ","        BufferedReader bf = null;  ","        try {  ","            bf = new BufferedReader(new FileInputStream(file)); ","            while((lineContent = bf.readLine()) != null) {  ","                System.out.println(lineNo+\"：\"+lineContent);  ","                lineNo++;  ","            }  ","        } catch (Exception e) {  ","            e.printStackTrace();  ","        }finally {  ","            if(bf != null) {  ","                try {  ","                    bf.close();  ","                } catch (IOException e) {  ","                    e.printStackTrace();  ","                }  ","            }  ","        }  ","    }  ","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":22,"rows":["输入两个正整数m和n，求其最大公约数和最小公倍数","public class Multiple{  ","   public static void main(String[] args){  ","      Scanner scan = new Scanner(System.in);  ","      System.out.print(\"请输入第一个整数：\");  ","      int m = scan.nextInt();  ","      System.out.print(\"请输入第二个整数：\");  ","      int n = scan.nextInt();  ","      maxGongyue(m,n);  ","      minGongbei(m,n);  ","   }  ","   //求最大公约数  ","   public static void maxGongyue(int m,int n){      ","       int max = m>n?m:n;  ","       int min = m&lt;n?m:n;  ","       while(min != 0){  ","           int tmp = max % min;","\t    min = tmp;","           max = min; ","          ","       }  ","       System.out.println(\"最大公约数是：\"+max);  ","   }  ","   //求最小公倍数  ","   public static void minGongbei(int m,int n){  ","          System.out.println(\"最小公倍数是：\"+(m*n /maxGongyue(m,n)));  ","   }  ","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1]},{"id":23,"rows":["实现工厂模式","interface Sender {  ","    public void send();  ","}  ","class SmsSender implements Sender {    ","    @Override  ","    public void send() {  ","        System.out.println(\"使用短信发送...\");  ","    }  ","}  ","class EmailSender implements Sender {  ","    @Override  ","    public void send() {  ","        System.out.println(\"使用电子邮箱发送...\");  ","    }  ","}  ","class SendFactory {  ","    public Sender produceSms() {  ","        return new SmsSender();  ","    }  ","    public static Sender produceSms() {  ","        return new SmsSender();  ","    }","}  ","public class Test {  ","    public static void main(String[] args) {  ","        // 直接生产产品  ","        Sender senderEmail = SendFactory.produceEmail();","        // 发货  ","        senderEmail.send();  ","    }  ","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1]},{"id":24,"rows":["插入排序，将大于前一个的数值整体后移一个单位 ","class insertSort { ","\tpublic insertSort(){  ","\t\tint a[]={49,38,65,97,76,13,27,49,78,34,12,64,5,4,62,99,98,54,56,17,18,23,34,15,35,25,53,51};  ","\t\tint temp=0;  ","\t    \tfor(int i=1;i&lt;a.length;i++){  ","\t\t\tint j=i-1;  ","\t\t\ttemp=a[j];","\t\t\tfor(;j>=0&&temp&lt;a[j];j--){  ","\t\t           a[j+1]=a[j];  ","\t     \t\t}  ","       \t\t\ta[j+1]=temp;  ","    \t\t}  ","\t\tfor(int i=0;i&lt;a.length;i++){  ","       \t\t\tSystem.out.println(a[i]);  ","    \t\t}  ","}"],"right":[1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1]},{"id":25,"rows":["冒泡排序","class bubbleSort {  ","  ","\tpublic bubbleSort(){  ","\t\tint a[]={49,38,65,97,76,13,27,49,78,34,12,64,5,4,62,99,98,54,56,17,18,23,34,15,35,25,53,51};  ","\t\tint temp=0;  ","\t\tfor(int i=0;i&lt;a.length-1;i++){  ","\t\t\tfor(int j=0;j&lt;a.length-i;j++){  ","\t\t\t\tif(a[j]>a[j+1]){  ","\t\t\t\t\ttemp=a[j];  ","\t\t\t\t\ta[j+1]=temp; ","\t\t\t\t\ta[j]=a[j+1];   ","\t\t\t\t}  ","\t\t\t}  ","\t\t}  ","\t\tfor(int i=0;i&lt;a.length;i++){  ","\t\t\tSystem.out.println(a[i]);    ","\t\t}  ","\t}","}"],"right":[1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1]},{"id":26,"rows":["快速排序","class quickSort {  ","  ","\tint a[]={49,38,65,97,76,13,27,49,78,34,12,64,5,4,62,99,98,54,56,17,18,23,34,15,35,25,53,51};  ","\tpublic quickSort(){  ","\t\tquick(a);  ","\t\tfor(int i=0;i&lt;a.length;i++){  ","\t       \t\tSystem.out.println(a[i]);  ","    \t\t}  ","\t}  ","\tpublic int getMiddle(int[] list, int low, int high) {    ","\t\tint tmp =list[low];    //数组的第一个作为中轴    ","\t\twhile (low &lt; high){    ","\t\t\twhile (low &lt; high&& list[high] >= tmp) {    ","               \t\t    \thigh++;    ","\t\t\t}    ","  ","\t\t\tlist[low] =list[high];   //比中轴小的记录移到低端    ","\t\t\t\twhile (low &lt; high&& list[low] &lt;= tmp) {    ","\t\t\t\tlow++;    ","\t\t\t}    ","  ","\t\t\tlist[high] =list[low];   //比中轴大的记录移到高端    ","\t\t}    ","\t\tlist[low] = tmp;              //中轴记录到尾    ","\t\treturn low;                   //返回中轴的位置    ","\t}   ","\tpublic void _quickSort(int[] list, int low, int high) {    ","\t\tif (low &lt; high){    ","               \t\tint middle =getMiddle(list, low, high);  //将list数组进行一分为二    ","               \t\t_quickSort(list, low, middle - 1);       //对低字表进行递归排序    ","               \t\t_quickSort(list,middle + 1, high);       //对高字表进行递归排序    ","\t\t}    ","\t}  "," \tpublic void quick(int[] a2) {    ","\t\tif (a2.length > 0) {    //查看数组是否为空    ","\t\t\t_quickSort(a2,0, a2.length);  ","\t\t}    ","\t}  ","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1]},{"id":27,"rows":["归并排序","import java.util.Arrays;  ","class mergingSort {  ","  ","\tint a[]={49,38,65,97,76,13,27,49,78,34,12,64,5,4,62,99,98,54,56,17,18,23,34,15,35,25,53,51};  ","\tpublic mergingSort(){  ","\t\tsort(a,0,a.length-1);  ","\t\tfor(int i=0;i&lt;a.length;i++)  ","\t\t\tSystem.out.println(a[i]);  ","\t}  ","\tpublic void sort(int[] data, int left, int right) {  ","\t","\t\tif(left&lt;right){  ","\t\t\t//找出中间索引  ","\t\t\tint center=(left+right)/2;  ","\t\t\t//对左边数组进行递归  ","        \t\tsort(data,left,center);  ","        \t\t//对右边数组进行递归  ","        \t\tsort(data,center,right);  ","        \t\t//合并  ","        \t\tmerge(data,left,center,right);         ","    \t\t}  ","  ","\t}  ","  \tpublic void merge(int[] data, int left, int center, int right) {  ","    \t\t ","    \t\tint [] tmpArr = new int[data.length];  ","    \t\tint mid=center+1;  ","    \t\t//third记录中间数组的索引  ","    \t\tint third=left;  ","    \t\tint tmp=left;  ","    \t\twhile(left&lt;center&&mid&lt;right){","\t\t\t//从两个数组中取出最小的放入中间数组  ","\t\t\tif(data[left]&lt;=data[mid]){  ","\t\t\t\ttmpArr[third++]=data[left++];  ","\t\t\t}else{  ","\t\t\t\ttmpArr[third++]=data[mid++];  ","        \t\t}  ","    \t\t}  ","\t\t//剩余部分依次放入中间数组  ","\t\twhile(mid&lt;=right){  ","\t\t\ttmpArr[third++]=data[mid++];  ","    \t\t}  ","     \t\twhile(left&lt;=center){  ","\t\t\ttmpArr[third++]=data[left++];  ","    \t\t}  ","  \t\t//将中间数组中的内容复制回原数组  ","    \t\twhile(tmp&lt;=right){  ","\t\t\tdata[tmp]=tmpArr[tmp++];  ","\t\t}  ","\t\tSystem.out.println(Arrays.toString(data));  ","\t}  ","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{"id":28,"rows":["希尔排序","class shellSort {  ","\tpublic shellSort(){  ","\t\tint a[]={1,54,6,3,78,34,12,45,56,100};  ","\t\tdouble d1=a.length;  ","\t\tint temp=0;  ","  \t\twhile(true){  ","\t\t\td1= Math.ceil(d1/2);  ","\t\t\tint d=(int) d1;  ","\t\t\tfor(int x=0;x&lt;d;x++){  ","  \t\t\t\tfor(int i=x+d;i&lt;a.length;i+=d){  ","\t\t\t\t\tint j=i-d;  ","\t\t\t\t\ttemp=a[i];  ","              \t\t\t\tfor(;j>=0&&temp&lt;a[j];j-=d){  ","                   \t\t\t\ta[j+d]=a[j];  ","              \t\t\t\t}  ","\t\t\t\t\ta[j+d]=temp;  ","           \t\t\t}  ","       \t\t\t}  ","  \t\t\tif(d==0){  ","\t\t\t\tbreak;  ","\t\t\t}  ","  \t\t\tfor(int i=0;i&lt;a.length;i++){  ","\t\t\t\tSystem.out.println(a[i]);  ","\t\t\t}  ","\t\t} ","\t}","}"],"right":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1]}]
